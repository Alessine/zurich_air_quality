id: load_daily_airquality_data
namespace: prod

inputs:
  - id: year
    type: SELECT
    displayName: Select year
    values: ["2024", "2025"]
    defaults: "2025"
    allowCustomValue: true

variables:
  file: "ugz_ogd_air_d1_{{inputs.year}}.csv"
  gcs_file: "gs://{{kv('GCP_BUCKET_NAME')}}/{{vars.file}}"
  table: "{{kv('GCP_DATASET')}}.ugz_ogd_air_d1_{{inputs.year}}"
  data: "{{outputs.extract.outputFiles['ugz_ogd_air_d1_' ~ inputs.year ~ '.csv']}}"

tasks:
  - id: set_label
    type: io.kestra.plugin.core.execution.Labels
    labels:
      file: "{{render(vars.file)}}"

  - id: extract
    type: io.kestra.plugin.scripts.shell.Commands
    outputFiles:
      - "*.csv"
    taskRunner:
      type: io.kestra.plugin.core.runner.Process
    commands:
      - wget -qO- https://data.stadt-zuerich.ch/dataset/ugz_luftschadstoffmessung_tageswerte/download/{{render(vars.file)}} > {{render(vars.file)}}

  - id: upload_to_gcs
    type: io.kestra.plugin.gcp.gcs.Upload
    from: "{{render(vars.data)}}"
    to: "{{render(vars.gcs_file)}}"

  - id: bq_create_daily_table
    type: io.kestra.plugin.gcp.bigquery.Query
    sql: |
      CREATE TABLE IF NOT EXISTS `{{kv('GCP_PROJECT_ID')}}.{{kv('GCP_DATASET')}}.daily_air_quality`
      ( 
        unique_row_id BYTES,
        date DATE,
        location STRING,
        parameter STRING,
        granularity STRING,
        unit STRING,
        value NUMERIC,
        status STRING,
        filename STRING,
      )
      PARTITION BY date;

  - id: bq_create_daily_table_ext
    type: io.kestra.plugin.gcp.bigquery.Query
    sql: |
      CREATE OR REPLACE EXTERNAL TABLE `{{kv('GCP_PROJECT_ID')}}.{{render(vars.table)}}_ext` 
      ( 
        Datum STRING,
        Standort STRING,
        Parameter STRING,
        Intervall STRING,
        Einheit STRING,
        Wert STRING,
        Status STRING 
      )
      OPTIONS (
        format = 'CSV',
        uris = ['{{render(vars.gcs_file)}}'],
        skip_leading_rows = 1,
        ignore_unknown_values = TRUE
      );

  - id: bq_create_daily_table_tmp
    type: io.kestra.plugin.gcp.bigquery.Query
    sql: |
      CREATE OR REPLACE TABLE `{{kv('GCP_PROJECT_ID')}}.{{render(vars.table)}}`
      AS
      SELECT
        MD5(CONCAT( COALESCE(Datum, ""), COALESCE(Standort, ""), COALESCE(Parameter, ""), COALESCE(Intervall, ""), COALESCE(Einheit, ""), COALESCE(Status, "") )) AS unique_row_id,
        DATE(PARSE_DATETIME('%Y-%m-%dT%H:%M+0100', Datum)) AS date,
        Standort AS location,
        Parameter AS parameter,
        Intervall AS granularity,
        Einheit AS unit,
        CASE
          WHEN Wert = 'NA' THEN NULL
          ELSE CAST(Wert AS NUMERIC)
        END AS value,
        Status AS status,
        "{{render(vars.file)}}" AS filename,
      FROM
        `{{kv('GCP_PROJECT_ID')}}.{{render(vars.table)}}_ext`;

  - id: bq_daily_table_merge
    type: io.kestra.plugin.gcp.bigquery.Query
    sql: |
      MERGE INTO `{{kv('GCP_PROJECT_ID')}}.{{kv('GCP_DATASET')}}.daily_air_quality` T
      USING `{{kv('GCP_PROJECT_ID')}}.{{render(vars.table)}}` S
      ON T.unique_row_id = S.unique_row_id
      WHEN NOT MATCHED THEN
        INSERT (unique_row_id, date, location, parameter, granularity, unit, value, status, filename)
        VALUES (S.unique_row_id, S.date, S.location, S.parameter, S.granularity, S.unit, S.value, S.status, S.filename);

  - id: purge_files
    type: io.kestra.plugin.core.storage.PurgeCurrentExecutionFiles
    description: If you would like to explore Kestra outputs, disable it.
    disabled: true

pluginDefaults:
  - type: io.kestra.plugin.gcp
    values:
      serviceAccount: "{{kv('GCP_CREDS')}}"
      projectId: "{{kv('GCP_PROJECT_ID')}}"
      location: "{{kv('GCP_LOCATION')}}"
      bucket: "{{kv('GCP_BUCKET_NAME')}}"
  
triggers:
  - id: d1_schedule
    type: io.kestra.plugin.core.trigger.Schedule
    cron: "0 4 * * *"
